# coding: utf-8

"""
    data.world API

    data.world is designed for data and the people who work with data.  From professional projects to open data, data.world helps you host and share your data, collaborate with your team, and capture context and conclusions as you work.   Using this API users are able to easily access data and manage their data projects regardless of language or tool of preference.  Check out our [documentation](https://dwapi.apidocs.io) for tips on how to get started, tutorials and to interact with the API right within your browser.

    OpenAPI spec version: 0.14.1
    Contact: help@data.world
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class FileSummaryResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'source': 'FileSourceSummaryResponse',
        'description': 'str',
        'labels': 'list[str]',
        'size_in_bytes': 'int',
        'created': 'str',
        'updated': 'str'
    }

    attribute_map = {
        'name': 'name',
        'source': 'source',
        'description': 'description',
        'labels': 'labels',
        'size_in_bytes': 'sizeInBytes',
        'created': 'created',
        'updated': 'updated'
    }

    def __init__(self, name=None, source=None, description=None, labels=None, size_in_bytes=None, created=None, updated=None):
        """
        FileSummaryResponse - a model defined in Swagger
        """

        self._name = None
        self._source = None
        self._description = None
        self._labels = None
        self._size_in_bytes = None
        self._created = None
        self._updated = None

        self.name = name
        if source is not None:
          self.source = source
        if description is not None:
          self.description = description
        if labels is not None:
          self.labels = labels
        if size_in_bytes is not None:
          self.size_in_bytes = size_in_bytes
        self.created = created
        self.updated = updated

    @property
    def name(self):
        """
        Gets the name of this FileSummaryResponse.
        File name. Should include type extension always when possible. Must not include slashes.

        :return: The name of this FileSummaryResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this FileSummaryResponse.
        File name. Should include type extension always when possible. Must not include slashes.

        :param name: The name of this FileSummaryResponse.
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def source(self):
        """
        Gets the source of this FileSummaryResponse.

        :return: The source of this FileSummaryResponse.
        :rtype: FileSourceSummaryResponse
        """
        return self._source

    @source.setter
    def source(self, source):
        """
        Sets the source of this FileSummaryResponse.

        :param source: The source of this FileSummaryResponse.
        :type: FileSourceSummaryResponse
        """

        self._source = source

    @property
    def description(self):
        """
        Gets the description of this FileSummaryResponse.
        File description.

        :return: The description of this FileSummaryResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this FileSummaryResponse.
        File description.

        :param description: The description of this FileSummaryResponse.
        :type: str
        """

        self._description = description

    @property
    def labels(self):
        """
        Gets the labels of this FileSummaryResponse.
        File labels.

        :return: The labels of this FileSummaryResponse.
        :rtype: list[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """
        Sets the labels of this FileSummaryResponse.
        File labels.

        :param labels: The labels of this FileSummaryResponse.
        :type: list[str]
        """

        self._labels = labels

    @property
    def size_in_bytes(self):
        """
        Gets the size_in_bytes of this FileSummaryResponse.

        :return: The size_in_bytes of this FileSummaryResponse.
        :rtype: int
        """
        return self._size_in_bytes

    @size_in_bytes.setter
    def size_in_bytes(self, size_in_bytes):
        """
        Sets the size_in_bytes of this FileSummaryResponse.

        :param size_in_bytes: The size_in_bytes of this FileSummaryResponse.
        :type: int
        """

        self._size_in_bytes = size_in_bytes

    @property
    def created(self):
        """
        Gets the created of this FileSummaryResponse.
        Date and time when file was created.

        :return: The created of this FileSummaryResponse.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this FileSummaryResponse.
        Date and time when file was created.

        :param created: The created of this FileSummaryResponse.
        :type: str
        """
        if created is None:
            raise ValueError("Invalid value for `created`, must not be `None`")

        self._created = created

    @property
    def updated(self):
        """
        Gets the updated of this FileSummaryResponse.
        Date and time when file was last updated.

        :return: The updated of this FileSummaryResponse.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """
        Sets the updated of this FileSummaryResponse.
        Date and time when file was last updated.

        :param updated: The updated of this FileSummaryResponse.
        :type: str
        """
        if updated is None:
            raise ValueError("Invalid value for `updated`, must not be `None`")

        self._updated = updated

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, FileSummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
