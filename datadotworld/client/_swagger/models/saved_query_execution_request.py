# coding: utf-8

"""
    data.world Public API (internal version)

    This is the internal version of the Swagger API generated from the Java                                             resource objects and is not visible to external users. It must be a superset                                             of the more user-friendly Swagger API maintained manually at                                             https://github.com/datadotworld/dwapi-spec.

    OpenAPI spec version: 0.21.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class SavedQueryExecutionRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'parameters': 'dict(str, RdfTerm)',
        'include_table_schema': 'bool',
        'max_rows': 'int',
        'query_run_token': 'str'
    }

    attribute_map = {
        'parameters': 'parameters',
        'include_table_schema': 'includeTableSchema',
        'max_rows': 'maxRows',
        'query_run_token': 'queryRunToken'
    }

    def __init__(self, parameters=None, include_table_schema=False, max_rows=None, query_run_token=None):
        """
        SavedQueryExecutionRequest - a model defined in Swagger
        """

        self._parameters = None
        self._include_table_schema = None
        self._max_rows = None
        self._query_run_token = None

        if parameters is not None:
          self.parameters = parameters
        if include_table_schema is not None:
          self.include_table_schema = include_table_schema
        if max_rows is not None:
          self.max_rows = max_rows
        if query_run_token is not None:
          self.query_run_token = query_run_token

    @property
    def parameters(self):
        """
        Gets the parameters of this SavedQueryExecutionRequest.

        :return: The parameters of this SavedQueryExecutionRequest.
        :rtype: dict(str, RdfTerm)
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """
        Sets the parameters of this SavedQueryExecutionRequest.

        :param parameters: The parameters of this SavedQueryExecutionRequest.
        :type: dict(str, RdfTerm)
        """

        self._parameters = parameters

    @property
    def include_table_schema(self):
        """
        Gets the include_table_schema of this SavedQueryExecutionRequest.

        :return: The include_table_schema of this SavedQueryExecutionRequest.
        :rtype: bool
        """
        return self._include_table_schema

    @include_table_schema.setter
    def include_table_schema(self, include_table_schema):
        """
        Sets the include_table_schema of this SavedQueryExecutionRequest.

        :param include_table_schema: The include_table_schema of this SavedQueryExecutionRequest.
        :type: bool
        """

        self._include_table_schema = include_table_schema

    @property
    def max_rows(self):
        """
        Gets the max_rows of this SavedQueryExecutionRequest.

        :return: The max_rows of this SavedQueryExecutionRequest.
        :rtype: int
        """
        return self._max_rows

    @max_rows.setter
    def max_rows(self, max_rows):
        """
        Sets the max_rows of this SavedQueryExecutionRequest.

        :param max_rows: The max_rows of this SavedQueryExecutionRequest.
        :type: int
        """

        self._max_rows = max_rows

    @property
    def query_run_token(self):
        """
        Gets the query_run_token of this SavedQueryExecutionRequest.

        :return: The query_run_token of this SavedQueryExecutionRequest.
        :rtype: str
        """
        return self._query_run_token

    @query_run_token.setter
    def query_run_token(self, query_run_token):
        """
        Sets the query_run_token of this SavedQueryExecutionRequest.

        :param query_run_token: The query_run_token of this SavedQueryExecutionRequest.
        :type: str
        """

        self._query_run_token = query_run_token

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, SavedQueryExecutionRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
